# Generated by Django 5.1.4 on 2025-02-01 15:25

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Inventory', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buyer_id', models.IntegerField(help_text='ID of the buyer')),
                ('seller_id', models.IntegerField(help_text='ID of the seller')),
                ('product_id', models.IntegerField(help_text='ID of the product being ordered')),
                ('product_name', models.CharField(help_text='Name of the product being ordered', max_length=200)),
                ('quantity', models.IntegerField(default=1, help_text='Quantity of the product being ordered')),
                ('price', models.FloatField(default=0, help_text='Price of the product at the time of purchase')),
                ('address', models.TextField(help_text='Delivery address for the order')),
                ('mobile_number', models.CharField(help_text='Mobile number of the buyer', max_length=15)),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('paypal', 'PayPal'), ('cash_on_delivery', 'Cash on Delivery')], default='credit_card', help_text='Method of payment', max_length=20)),
                ('order_date', models.DateTimeField(auto_now_add=True, help_text='Date and time when the order was placed')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('shipped', 'Shipped'), ('delivered', 'Delivered')], default='pending', help_text='Order status', max_length=20)),
            ],
        ),
        migrations.RemoveField(
            model_name='products',
            name='code',
        ),
        migrations.RemoveField(
            model_name='products',
            name='price',
        ),
        migrations.AddField(
            model_name='products',
            name='product_category',
            field=models.CharField(help_text='Category of the product', max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='products',
            name='product_image',
            field=models.ImageField(blank=True, null=True, upload_to='product_images/'),
        ),
        migrations.AddField(
            model_name='products',
            name='product_net_weight',
            field=models.FloatField(default=0, help_text='Net weight of the product in grams or kg'),
        ),
        migrations.AddField(
            model_name='products',
            name='product_price',
            field=models.FloatField(default=0, help_text='Price of the product'),
        ),
        migrations.AddField(
            model_name='products',
            name='seller_id',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[('seller', 'Seller'), ('buyer', 'Buyer')], max_length=10)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('address', models.TextField()),
                ('contact_number', models.CharField(max_length=15)),
                ('district', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='inventory_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='inventory_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
